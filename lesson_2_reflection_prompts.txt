What happens when you initialize a repository? 

a .git folder with change history is created

Why do you need to do it?


to track versions over time


How is the staging area different from the working directory and the repository?
 What value do you think it offers?

The staging are is a buffer between the working directory and the repository. The staging area makes possible to be sleective about the files in the  working directory to be commited to the repository.



How can you use the staging area to make sure you have one commit per logical 
change?

Using diff it is possible to review yet-to-be committed changes and be selective which ones are commited and whch ones arent not  to.



What are some situations when branches would be helpful in keeping your history
 organized? How would branches help?



to explore alternative variants and/or enable team work / parallel work streams. Also letting each variant have its own history traced.

How do the diagrams help you visualize the branch structure?

because they help manage multiple work streams by keeping them in view as a part of coherent whole. Further, they help conceptualize the pattern of developments around the master branch.



What is the result of merging two branches together?

common parts are preserved up the node in which the two branch are preserved, different parts are merged together. But it is necessary to review the commits to see which changes are comparitble with each other. Usually this is judged by comparing the earliest common version (split node) anch checking the common and different features between the tip of the branches and the split node.

Why do we represent it in
 the diagram the way we do?



To preseve the information implicit in the split in the parallel lines of development of the files.

What are the pros and cons of Git’s automatic merging vs. always doing merges 
manually?


Automatic merging implies lack of control on the process and the possibility of losing or imposing changes unwittingly, whereas manually merging the branches impies that we need to work on guaranteing on the consistency of the merges, involving different developers as necessary.